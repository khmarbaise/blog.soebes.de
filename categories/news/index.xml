<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>News on A coders, hackers heaven.....Hm...I do not think so...</title>
    <link>http://localhost:1313/categories/news/</link>
    <description>Recent content in News on A coders, hackers heaven.....Hm...I do not think so...</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 02 Jun 2019 23:45:32 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/news/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Doxia Site Tools Version 1.9 Released</title>
      <link>http://localhost:1313/blog/2019/06/2019-06-02-apache-maven-doxia-version-1-dot-9-released/</link>
      <pubDate>Sun, 02 Jun 2019 23:45:32 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/06/2019-06-02-apache-maven-doxia-version-1-dot-9-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Doxia Site Tools Version 1.9, Released
Doxia Sitetools is an extension of base Doxia component that generates either HTML sites, consisting of decoration and content that was generated by Doxia, or documents like RTF or PDF.
Release Notes - Maven Doxia base - Version 1.9
You can download the appropriate sources etc. from the download page.
Release Notes - Maven Doxia Sitetools - Version 1.</description>
    </item>
    
    <item>
      <title>Apache Maven Checkstyle Plugin Version 3.1.0 Released</title>
      <link>http://localhost:1313/blog/2019/05/2019-05-28-apache-maven-checkstyle-plugin-version-3-dot-1-0-released/</link>
      <pubDate>Tue, 28 May 2019 15:38:12 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/05/2019-05-28-apache-maven-checkstyle-plugin-version-3-dot-1-0-released/</guid>
      <description>The Maven team is pleased to announce the release of the Apache Maven Checkstyle Plugin, version 3.1.0.
The Checkstyle Plugin generates a report regarding the code style used by the developers. For more information about Checkstyle, see http://checkstyle.sourceforge.net/.
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-checkstyle-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Apache Maven Checkstyle Plugin - Version 3.1.0
You can download the appropriate sources etc. from the download page:</description>
    </item>
    
    <item>
      <title>Apache Maven WAR Plugin Version 3.2.3 Released</title>
      <link>http://localhost:1313/blog/2019/05/2019-05-23-apache-maven-war-plugin-version-3-dot-2-3-released/</link>
      <pubDate>Mon, 27 May 2019 20:04:39 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/05/2019-05-23-apache-maven-war-plugin-version-3-dot-2-3-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven WAR Plugin, version 3.2.3.
The WAR Plugin is responsible for collecting all artifact dependencies, classes and resources of the web application and packaging them into a web application archive.
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.2.3&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; You can download the appropriate sources etc. from the download page.
Important Note:</description>
    </item>
    
    <item>
      <title>Apache Maven Source Plugin Version 3.1.0 Released</title>
      <link>http://localhost:1313/blog/2019/05/2019-05-19-apache-maven-source-plugin-version-3-dot-1-0-released/</link>
      <pubDate>Sun, 19 May 2019 19:10:34 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/05/2019-05-19-apache-maven-source-plugin-version-3-dot-1-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Source Plugin, Version 3.1.0.
The Source Plugin creates a jar archive of the source files of the current project. The jar file is, by default, created in the project&amp;rsquo;s target directory.
Important Note:
 Maven 3.X only JDK 7 minimum requirement  &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-source-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; You can download the appropriate sources etc. from the download page.</description>
    </item>
    
    <item>
      <title>Apache Maven Surefire Plugin Version 2.22.2 Released</title>
      <link>http://localhost:1313/blog/2019/05/2019-05-05-apache-maven-surefire-plugin-version-2-dot-22-2-released/</link>
      <pubDate>Sun, 05 May 2019 23:55:33 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/05/2019-05-05-apache-maven-surefire-plugin-version-2-dot-22-2-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Surefire Plugin, version 2.22.2.
The release contains 1 bug fixes. Again we received contributions from the community in form of bug reports and bug fixes. Thank you and keep them coming!
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.22.2&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; or for failsafe:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-failsafe-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.22.2&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; or for surefire-report:</description>
    </item>
    
    <item>
      <title>Apache Maven Help Plugin Version 3.2.0 Released</title>
      <link>http://localhost:1313/blog/2019/04/2019-04-22-apache-maven-help-plugin-version-3-dot-2-0-released/</link>
      <pubDate>Mon, 22 Apr 2019 12:45:31 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/04/2019-04-22-apache-maven-help-plugin-version-3-dot-2-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Help Plugin, version 3.2.0
The Maven Help Plugin is used to get relative information about a project or the system. It can be used to get a description of a particular plugin, including the plugin&amp;rsquo;s goals with their parameters and component requirements, the effective POM and effective settings of the current build, and the profiles applied to the current project being built.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.6.1 Released</title>
      <link>http://localhost:1313/blog/2019/04/2019-04-13-apache-maven-3-dot-6-1-released/</link>
      <pubDate>Sat, 13 Apr 2019 12:45:02 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/04/2019-04-13-apache-maven-3-dot-6-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven 3.6.1.
Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&amp;rsquo;s build, reporting and documentation from a central piece of information.
You can find out more about Apache Maven at https://maven.apache.org
You can download the appropriate sources etc. from the download page</description>
    </item>
    
    <item>
      <title>Apache Maven Artifact Resolver 1.3.3 Released</title>
      <link>http://localhost:1313/blog/2019/03/2019-03-15-apache-maven-resolver-version-1-dot-3-dot-3-released/</link>
      <pubDate>Fri, 15 Mar 2019 17:25:31 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/03/2019-03-15-apache-maven-resolver-version-1-dot-3-dot-3-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Artifact Resolver, version 1.3.3
Apache Maven Artifact Resolver is a library for working with artifact repositories and dependency resolution.
Maven Artifact Resolver deals with the specification of local repository, remote repository, developer workspaces, artifact transports and artifact resolution.
It is expected to be extended by concrete repository implementation, like Maven Artifact Resolver Provider for Maven repositories or any other provider for other repository formats.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.4.0 Released</title>
      <link>http://localhost:1313/blog/2019/02/2019-02-24-apache-maven-shared-component-maven-archiver-version-3-dot-4-dot-0-released/</link>
      <pubDate>Sun, 24 Feb 2019 23:34:53 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2019/02/2019-02-24-apache-maven-shared-component-maven-archiver-version-3-dot-4-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.4.0.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven Help Plugin Version 3.1.1 Released</title>
      <link>http://localhost:1313/blog/2018/12/2018-12-12-apache-maven-help-plugin-version-3-dot-1-1-released/</link>
      <pubDate>Wed, 12 Dec 2018 19:45:37 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/12/2018-12-12-apache-maven-help-plugin-version-3-dot-1-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Help Plugin, version 3.1.1
The Maven Help Plugin is used to get relative information about a project or the system. It can be used to get a description of a particular plugin, including the plugin&amp;rsquo;s goals with their parameters and component requirements, the effective POM and effective settings of the current build, and the profiles applied to the current project being built.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.3.0 Released</title>
      <link>http://localhost:1313/blog/2018/11/2018-11-17-apache-maven-shared-component-maven-archiver-version-3-dot-3-dot-0-released/</link>
      <pubDate>Sat, 17 Nov 2018 23:30:51 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/11/2018-11-17-apache-maven-shared-component-maven-archiver-version-3-dot-3-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.3.0.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven 3.6.0 Released</title>
      <link>http://localhost:1313/blog/2018/11/2018-11-01-apache-maven-3-dot-6-0-released/</link>
      <pubDate>Thu, 01 Nov 2018 13:15:12 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/11/2018-11-01-apache-maven-3-dot-6-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven 3.6.0.
Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&amp;rsquo;s build, reporting and documentation from a central piece of information.
You can find out more about Apache Maven at https://maven.apache.org
You can download the appropriate sources etc. from the download page</description>
    </item>
    
    <item>
      <title>Apache Maven Artifact Resolver 1.3.1 Released</title>
      <link>http://localhost:1313/blog/2018/10/2018-10-15-apache-maven-resolver-version-1-dot-3-dot-1-released/</link>
      <pubDate>Mon, 15 Oct 2018 20:25:15 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/10/2018-10-15-apache-maven-resolver-version-1-dot-3-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Artifact Resolver, version 1.3.1
Apache Maven Artifact Resolver is a library for working with artifact repositories and dependency resolution.
Maven Artifact Resolver deals with the specification of local repository, remote repository, developer workspaces, artifact transports and artifact resolution.
It is expected to be extended by concrete repository implementation, like Maven Artifact Resolver Provider for Maven repositories or any other provider for other repository formats.</description>
    </item>
    
    <item>
      <title>Apache Maven Artifact Resolver 1.3.0 Released</title>
      <link>http://localhost:1313/blog/2018/10/2018-10-09-apache-maven-resolver-version-1-dot-3-dot-0-released/</link>
      <pubDate>Tue, 09 Oct 2018 23:45:55 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/10/2018-10-09-apache-maven-resolver-version-1-dot-3-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Artifact Resolver, version 1.3.0
Apache Maven Artifact Resolver is a library for working with artifact repositories and dependency resolution.
Maven Artifact Resolver deals with the specification of local repository, remote repository, developer workspaces, artifact transports and artifact resolution.
It is expected to be extended by concrete repository implementation, like Maven Artifact Resolver Provider for Maven repositories or any other provider for other repository formats.</description>
    </item>
    
    <item>
      <title>Apache Maven JXR Plugin Version 3.0.0 Released</title>
      <link>http://localhost:1313/blog/2018/09/2018-09-25-apache-maven-jxr-plugin-version-3-dot-0-0-released/</link>
      <pubDate>Tue, 25 Sep 2018 22:15:12 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/09/2018-09-25-apache-maven-jxr-plugin-version-3-dot-0-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven JXR, version 3.0.0.
This module generates browsable HTML pages from Java source code.
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-jxr-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; NOTE: Special thanks for the contributions retrieved during the hackathon at JCreate.
Release Notes - Maven JXR - Version 3.0.0
Bugs:
 JXR-68 - ignores classes with same name in other packages JXR-98 - Nested classes aren&amp;rsquo;t linked correctly JXR-100 - Method declaration: using spaces before or after parenthesis prevents cross references generation JXR-126 - File write using platform default encoding JXR-135 - Invalid representation of inner class JXR-140 - Proper URL handling  Improvements:</description>
    </item>
    
    <item>
      <title>Apache Maven 3.5.4 Released</title>
      <link>http://localhost:1313/blog/2018/06/2018-06-22-apache-maven-3-dot-5-4-features/</link>
      <pubDate>Fri, 22 Jun 2018 11:45:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/06/2018-06-22-apache-maven-3-dot-5-4-features/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven 3.5.4.
Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&amp;rsquo;s build, reporting and documentation from a central piece of information.
You can find out more about Apache Maven at https://maven.apache.org
You can download the appropriate sources etc. from the download page: https://maven.</description>
    </item>
    
    <item>
      <title>Apache Maven Help Plugin Version 3.1.0 Released</title>
      <link>http://localhost:1313/blog/2018/06/2018-06-09-apache-maven-help-plugin-version-3-dot-1-0-released/</link>
      <pubDate>Sat, 09 Jun 2018 15:45:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/06/2018-06-09-apache-maven-help-plugin-version-3-dot-1-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Help Plugin, version 3.1.0
The Maven Help Plugin is used to get relative information about a project or the system. It can be used to get a description of a particular plugin, including the plugin&amp;rsquo;s goals with their parameters and component requirements, the effective POM and effective settings of the current build, and the profiles applied to the current project being built.</description>
    </item>
    
    <item>
      <title>Apache Maven Help Plugin Version 3.0.1 Released</title>
      <link>http://localhost:1313/blog/2018/03/2018-03-27-apache-maven-help-plugin-version-3-dot-0-1-released/</link>
      <pubDate>Tue, 27 Mar 2018 22:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/03/2018-03-27-apache-maven-help-plugin-version-3-dot-0-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Help Plugin, version 3.0.1
The Maven Help Plugin is used to get relative information about a project or the system. It can be used to get a description of a particular plugin, including the plugin&amp;rsquo;s goals with their parameters and component requirements, the effective POM and effective settings of the current build, and the profiles applied to the current project being built.</description>
    </item>
    
    <item>
      <title>MojoHaus XML Maven Plugin Version 1.0.2 Released</title>
      <link>http://localhost:1313/blog/2018/03/2018-03-27-mojohaus-xml-maven-plugin-version-1-dot-0-2-release/</link>
      <pubDate>Tue, 27 Mar 2018 17:30:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/03/2018-03-27-mojohaus-xml-maven-plugin-version-1-dot-0-2-release/</guid>
      <description>The MojoHaus team is pleased to announce the release of the XML Maven Plugin Version 1.0.1.
This Plugin is a collection of several XML related tasks.
To get this update, simply specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xml-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0.2&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes
Enjoy,
The Mojo team. Ross.</description>
    </item>
    
    <item>
      <title>Apache Maven Help Plugin Version 3.0.0 Released</title>
      <link>http://localhost:1313/blog/2018/03/2018-03-18-apache-maven-help-plugin-version-3-dot-0-0-released/</link>
      <pubDate>Sat, 17 Mar 2018 23:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/03/2018-03-18-apache-maven-help-plugin-version-3-dot-0-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Help Plugin, version 3.0.0
The Maven Help Plugin is used to get relative information about a project or the system. It can be used to get a description of a particular plugin, including the plugin&amp;rsquo;s goals with their parameters and component requirements, the effective POM and effective settings of the current build, and the profiles applied to the current project being built.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.5.3 Released</title>
      <link>http://localhost:1313/blog/2018/03/2018-03-08-apache-maven-3-dot-5-3-features/</link>
      <pubDate>Thu, 08 Mar 2018 16:45:34 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/03/2018-03-08-apache-maven-3-dot-5-3-features/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven 3.5.3
You can download the appropriate sources etc. from the download page
Contributors The Apache Maven team would like to thank the following contributors, without whom this release would not have been possible:
Code contributors:
 Sylwester Lachiewicz Bengt Söderberg Robin Müller Romain Manni-Bucau  Issue reporters:
 Ryan Heaton Ryan J McDonough Andreas Kurth Ben Caradoc-Davies Romain Manni-Bucau Robin Müller Dejan Stojadinović Andrew Kennedy Sylwester Lachiewicz Andy Wilkinson Eugene Pliskin Tony Guan  Community testers participating in voting for this release:</description>
    </item>
    
    <item>
      <title>Apache Maven Artifact Resolver 1.1.1 Released</title>
      <link>http://localhost:1313/blog/2018/02/2018-02-20-apache-maven-resolver-version-1-dot-1-dot-1-released/</link>
      <pubDate>Tue, 20 Feb 2018 15:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/02/2018-02-20-apache-maven-resolver-version-1-dot-1-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Artifact Resolver, version 1.1.1
Apache Maven Artifact Resolver is a library for working with artifact repositories and dependency resolution.
Maven Artifact Resolver deals with the specification of local repository, remote repository, developer workspaces, artifact transports and artifact resolution.
It is expected to be extended by concrete repository implementation, like Maven Artifact Resolver Provider for Maven repositories or any other provider for other repository formats.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 3.2.1 Released</title>
      <link>http://localhost:1313/blog/2018/02/2018-02-10-apache-maven-shared-utils-version-3-dot-2-dot-1-released/</link>
      <pubDate>Sat, 10 Feb 2018 15:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2018/02/2018-02-10-apache-maven-shared-utils-version-3-dot-2-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 3.2.1.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.2.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; You can download the appropriate sources etc. from the download page:
https://maven.apache.org/shared/maven-shared-utils/download.cgi
Release Notes - Maven Shared Utils - Version 3.2.1
New Feature:
 MSHARED-648 - Add registerShutdownHook to MessageUtils  Dependency upgrade:</description>
    </item>
    
    <item>
      <title>Apache Maven 3.5.2 Released</title>
      <link>http://localhost:1313/blog/2017/10/2017-10-25-apache-maven-3-dot-5-2-released/</link>
      <pubDate>Wed, 25 Oct 2017 12:34:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2017/10/2017-10-25-apache-maven-3-dot-5-2-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven 3.5.2
You can download the appropriate sources etc. from the download page.
Contributors The Apache Maven team would like to thank the following contributors, without whom this release would not have been possible:
Code contributors:
 Mario Krizmanic Dejan Stojadinovic Anton Tanasenko Stefan Eicher  Issue reporters:
 Marcel Schutte Mario Krizmanic Charles Gould Brian Oxley Anton Tanasenko Gregor B.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.2.0 Released</title>
      <link>http://localhost:1313/blog/2017/08/2017-08-13-apache-maven-shared-component-maven-archiver-version-3-dot-2-dot-0-released/</link>
      <pubDate>Sun, 13 Aug 2017 12:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2017/08/2017-08-13-apache-maven-shared-component-maven-archiver-version-3-dot-2-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.2.0.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 3.2.0 Released</title>
      <link>http://localhost:1313/blog/2017/06/2017-06-17-apache-maven-shared-utils-version-3-dot-2-dot-0-released/</link>
      <pubDate>Sat, 17 Jun 2017 23:10:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2017/06/2017-06-17-apache-maven-shared-utils-version-3-dot-2-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 3.2.0.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Release Notes - Maven Shared Utils - Version 3.2.0
Bugs:
 MSHARED-574 - - UT failure on Windows: utils.io.Java7SupportTest createAndReadSymlink MSHARED-610 - - PrettyPrintXMLWriter internally uses java.io.PrintWriter without checking for any errors.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.5.0 Released</title>
      <link>http://localhost:1313/blog/2017/04/2017-04-07-apache-maven-3-dot-5-0-release/</link>
      <pubDate>Fri, 07 Apr 2017 23:34:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2017/04/2017-04-07-apache-maven-3-dot-5-0-release/</guid>
      <description>The Apache Maven team would like to announce the release of Apache Maven 3.5.0.
You can download the appropriate sources etc. from the download page.
Notable changes  ANSI colors added to the console output Fix various bugs in mvn scripts regarding spaces, quotations, special characters, etc. also in combination with .mvn/ -files Switch from Eclipse Aether to Maven Artifact Resolver  What happened to Maven 3.4.0? After Maven 3.</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.7 Released</title>
      <link>http://localhost:1313/blog/2016/12/2016-12-20-the-jenkins-api-client-for-java-version-0-dot-3-7-released/</link>
      <pubDate>Tue, 20 Dec 2016 20:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/12/2016-12-20-the-jenkins-api-client-for-java-version-0-dot-3-7-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.7 contains several bugfixes and new features. Detailed information about the changes can be found in the release notes.
This is the second release under the Jenkins Github Organization umbrella.
 Build class offers now two different methods to get the test informations. Using either getTestResult() for non maven type jobs or getTestReport() for maven type jobs.</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.6 Released</title>
      <link>http://localhost:1313/blog/2016/08/2016-08-31-the-jenkins-api-client-for-java-version-0-dot-3-6-released/</link>
      <pubDate>Wed, 31 Aug 2016 21:24:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/08/2016-08-31-the-jenkins-api-client-for-java-version-0-dot-3-6-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.6 contains several bugfixes and new features. Detailed information about the changes can be found in the release notes.
This is the first release under the Jenkins Github Organization umbrella.
 The TestReport can now be used from the general Build as well as from MavenBuild Changed getComputerSet().getComputer() into getComputerSet().getComputers() cause it returned a list and more than one element.</description>
    </item>
    
    <item>
      <title>Spoiler Alert: Upcoming Maven 3.4.0 - Changes - III</title>
      <link>http://localhost:1313/blog/2016/08/2016-08-08-spoiler-alert-maven-3-dot-4-0-changes-iii/</link>
      <pubDate>Mon, 08 Aug 2016 07:30:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/08/2016-08-08-spoiler-alert-maven-3-dot-4-0-changes-iii/</guid>
      <description>Currently the preparations for the upcoming Maven 3.4.0 release is running. There had been informations about the changes for the next Maven release.
I will give some more information about changes which are (might be!) part of the next Maven release.
Just be warned that you do not blame me if a particular issue will not part of the final release. This is written from the current perspecitve. So no warranty about that.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 3.1.0 Released</title>
      <link>http://localhost:1313/blog/2016/07/2016-07-27-apache-maven-shared-utils-version-3-dot-1-dot-0-released/</link>
      <pubDate>Wed, 27 Jul 2016 11:05:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/07/2016-07-27-apache-maven-shared-utils-version-3-dot-1-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 3.1.0.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Release Notes - Maven Shared Utils - Version 3.1.0
Bugs:
 563 Directory traversal in org.apache.maven.shared.utils.Expand 564 Exceptions thrown on closing resources should not be suppressed silently.  Improvement:</description>
    </item>
    
    <item>
      <title>Spoiler Alert: Upcoming Maven 3.4.0 - Changes - II</title>
      <link>http://localhost:1313/blog/2016/07/2016-07-01-spoiler-alert-maven-3-dot-4-0-changes-ii/</link>
      <pubDate>Fri, 01 Jul 2016 14:30:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/07/2016-07-01-spoiler-alert-maven-3-dot-4-0-changes-ii/</guid>
      <description>Currently the preparations for the upcoming Maven 3.4.0 release is running. There had been informations about the changes for the next Maven release.
I will give some more information about changes which are (might be!) part of the next Maven release.
Just be warned that you do not blame me if a particular issue will not part of the final release. This is written from the current perspecitve. So no warranty about that.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.1.1 Released</title>
      <link>http://localhost:1313/blog/2016/06/2016-06-18-apache-maven-shared-component-maven-archiver-version-3-dot-1-dot-1-released/</link>
      <pubDate>Sat, 18 Jun 2016 16:05:20 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/06/2016-06-18-apache-maven-shared-component-maven-archiver-version-3-dot-1-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.1.1.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.1.0 Released</title>
      <link>http://localhost:1313/blog/2016/06/2016-06-03-apache-maven-shared-component-maven-archiver-version-3-dot-1-dot-0-released/</link>
      <pubDate>Mon, 06 Jun 2016 20:15:15 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/06/2016-06-03-apache-maven-shared-component-maven-archiver-version-3-dot-1-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.1.0.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 3.0.1 Released</title>
      <link>http://localhost:1313/blog/2016/06/2016-06-03-apache-maven-shared-utils-version-3-dot-0-dot-1-released/</link>
      <pubDate>Fri, 03 Jun 2016 11:05:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/06/2016-06-03-apache-maven-shared-utils-version-3-dot-0-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 3.0.1.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.1&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven Shared Utils - Version 3.0.1
Bug:
 MSHARED-475 - Not able to compile a module named as &amp;ldquo;RCS&amp;rdquo; and &amp;ldquo;SCCS&amp;rdquo;  Improvements:
 MSHARED-503 - Upgrade maven-shared-components parent to version 22 MSHARED-504 - Remove System.</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.5 Released</title>
      <link>http://localhost:1313/blog/2016/05/2016-05-14-the-jenkins-api-client-for-java-version-0-dot-3-5-released/</link>
      <pubDate>Sat, 14 May 2016 22:21:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/05/2016-05-14-the-jenkins-api-client-for-java-version-0-dot-3-5-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.5 contains several bugfixes and new features. Detailed information about the changes can be found in the release notes.
 There had been several issues related to NPE. for example getUpstreamProjects(), getDownstreamProjects() which return null in case there is no such dependency. This has been fixed to return an empty list.
 Also fixed possible NPE in relation ship with getLastBuild() etc.</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.4 Released</title>
      <link>http://localhost:1313/blog/2016/05/2016-05-04-the-jenkins-api-client-for-java-version-0-dot-3-4-released/</link>
      <pubDate>Wed, 04 May 2016 15:30:21 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/05/2016-05-04-the-jenkins-api-client-for-java-version-0-dot-3-4-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.4 contains several bugfixes and new features. Detailed information about the changes can be found in the release notes.
 There has been several issues related to HttpResponseException which occured this has been fixed in the current release.
 You can now get the whole information about the installed plugins on a Jenkins Server if you have the appropriate permissions, cause the access to the pluginManager is defined an administrative permisions.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.0.2 Released</title>
      <link>http://localhost:1313/blog/2016/05/2016-05-01-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-2-released/</link>
      <pubDate>Sun, 01 May 2016 12:35:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/05/2016-05-01-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-2-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.0.2.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.0.1 Released</title>
      <link>http://localhost:1313/blog/2016/04/2016-04-14-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-1-released/</link>
      <pubDate>Thu, 14 Apr 2016 11:01:22 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2016/04/2016-04-14-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-1-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.0.1.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.3 Released</title>
      <link>http://localhost:1313/blog/2015/12/2015-12-23-the-jenkins-api-client-for-java-version-0-dot-3-3-released/</link>
      <pubDate>Wed, 23 Dec 2015 13:50:21 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/12/2015-12-23-the-jenkins-api-client-for-java-version-0-dot-3-3-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.3 contains a few bugfixes. Detailed information about the changes can be found in the release notes.
The Jenkins API client for Java allows you to get informations about builds for example the duration of a build or test report informations.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.3.9 Released</title>
      <link>http://localhost:1313/blog/2015/11/2015-11-18-apache-maven-version-3-dot-3-9-released/</link>
      <pubDate>Wed, 18 Nov 2015 18:47:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/11/2015-11-18-apache-maven-version-3-dot-3-9-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of Apache Maven 3.3.9.
You can download the appropriate sources etc. from the download page
Release Notes - Apache Maven Version 3.3.9
Code Contributors of this release:
 Martin Schäf Stuart McCulloch sugartxy Robert Stern Florencia Tarditti tssp Dave Syer Joseph Walton Stephen Kitt Anton Tanasenko Tang Xinye Ben Caradoc-Davies  Issue Reporters of this release:
 Brandon Enochs Martin Schäf Stephan Schroevers Christian Schlichtherle Brandon Enochs Anders Forsell Shubham Chaurasia Keith Turner Jonathan Radon Ben Caradoc-Davies  Many thanks to contributors and reporters for the support and time.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 3.0.0 Released</title>
      <link>http://localhost:1313/blog/2015/10/2015-10-21-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-0-released/</link>
      <pubDate>Wed, 21 Oct 2015 21:43:20 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/10/2015-10-21-apache-maven-shared-component-maven-archiver-version-3-dot-0-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 3.0.0.
The Maven Archiver is mainly used by plugins to handle packaging. The version numbers referenced in the Since column on this page are the version of the Maven Archiver component - not for any specific plugin. To see which version of Maven Archiver a plugin uses, go to the site for that plugin.
You should specify the version in your project&amp;rsquo;s dependency configuration:</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.2 Released</title>
      <link>http://localhost:1313/blog/2015/10/2015-10-18-the-jenkins-api-client-for-java-version-0-dot-3-2-released/</link>
      <pubDate>Sun, 18 Oct 2015 19:31:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/10/2015-10-18-the-jenkins-api-client-for-java-version-0-dot-3-2-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.2 contains several improvements and a few bugfixes. Detailed information about the changes can be found in the release notes.
The Jenkins API client for Java allows you to get informations about builds for example the duration of a build or test report informations.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 3.0.0 Released</title>
      <link>http://localhost:1313/blog/2015/10/2015-10-16-apache-maven-shared-utils-version-3-dot-0-dot-0-released/</link>
      <pubDate>Fri, 16 Oct 2015 11:05:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/10/2015-10-16-apache-maven-shared-utils-version-3-dot-0-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 3.0.0.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven Shared Utils - Version 3.0.0
Bug:
 MSHARED-444 - Make the optional dependency (commons-io) to a usual dependency  Improvements:
 MSHARED-439 - Upgrade to Maven 3.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 0.9 Released</title>
      <link>http://localhost:1313/blog/2015/09/2015-09-21-apache-maven-shared-utils-version-0-dot-9-released/</link>
      <pubDate>Mon, 21 Sep 2015 08:22:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/09/2015-09-21-apache-maven-shared-utils-version-0-dot-9-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 0.9.
The release contains a number of bug fixes.
You should specify the version in your project&amp;rsquo;s dependencies configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.9&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven Shared Utils - Version 0.9
Bugs:
 MSHARED-426 - Upgrade maven-assembly-plugin to Version 2.5.5 MSHARED-434 - NPE due to concurrent calls in close() method of StreamFeeder class MSHARED-435 - createSymbolicLink() ClassCastException  Improvement:</description>
    </item>
    
    <item>
      <title>The Jenkins API Client for Java Version 0.3.1 Released</title>
      <link>http://localhost:1313/blog/2015/08/2015-08-31-the-jenkins-api-client-for-java-version-0-dot-3-1-released/</link>
      <pubDate>Mon, 31 Aug 2015 19:07:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/08/2015-08-31-the-jenkins-api-client-for-java-version-0-dot-3-1-released/</guid>
      <description>We have released a new version of the The Jenkins API client for Java. The new released 0.3.1 contains several improvements and a few bugfixes. Detailed information about the changes can be found in the release notes.
The Jenkins API client for Java allows you to get informations about builds for example the duration of a build or test report informations.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Utils Version 0.8 Released</title>
      <link>http://localhost:1313/blog/2015/06/2015-06-20-apache-maven-shared-utils-version-0-dot-8-released/</link>
      <pubDate>Sat, 20 Jun 2015 15:31:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/06/2015-06-20-apache-maven-shared-utils-version-0-dot-8-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Shared Utils, version 0.8
This project aims to be a functional replacement for plexus-utils in Maven.
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shared-utils&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.8&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven Shared Utils Release 0.8
Bug:
 MSHARED-369 - ReflectionValueExtractor regression; incorrect parsing  Improvement:
 MSHARED-415 - Allow passing a Charset to be used by the StreamPumper to read from the input streams  Enjoy,</description>
    </item>
    
    <item>
      <title>Apache Maven 3.3.3 Released</title>
      <link>http://localhost:1313/blog/2015/04/2015-04-28-apache-maven-version-3-dot-3-3-released/</link>
      <pubDate>Tue, 28 Apr 2015 20:20:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/04/2015-04-28-apache-maven-version-3-dot-3-3-released/</guid>
      <description>The new Maven 3.3.3 Release is out.
Bugs:
 MNG-5605 - ssh-wagon hangs MNG-5793 - same class realm registered both with plugin and extensions realm caches MNG-5795 - Maven extensions can not be retrieved from authenticated repositories MNG-5797 - &amp;lsquo;mvn deploy&amp;rsquo; sends HTTP User-Agent twice  Improvements:
 MNG-5794 - Warn about Proxies with duplicate id, but different protocols MNG-5808 - Upgrade Maven to use Wagon 2.9
 The Apache Maven Team.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.3.1 Features</title>
      <link>http://localhost:1313/blog/2015/03/2015-03-17-apache-maven-3-dot-3-1-features/</link>
      <pubDate>Tue, 17 Mar 2015 01:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015/03/2015-03-17-apache-maven-3-dot-3-1-features/</guid>
      <description>The new Maven 3.3.1 Release is just out. Let us take a deeper look into the new features/improvements:
 The first and most important thing is that Maven 3.3.1 needs JDK 1.7.
 In our days it becomes more and more important to be able to use different JDK to be used by Maven itself and which is used to compile/test your production code. This concept is know under the name Toolchains which is unfortunately not very well-known.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.2.5 Released</title>
      <link>http://localhost:1313/blog/2014/12/2014-12-20-apache-maven-version-3-dot-2-5-released/</link>
      <pubDate>Sat, 20 Dec 2014 12:06:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/12/2014-12-20-apache-maven-version-3-dot-2-5-released/</guid>
      <description>Hi!
The Apache Maven Team is pleased to announce the release of 3.2.5
The release notes can be found here: https://maven.apache.org/docs/3.2.5/release-notes.html
The release can be downloaded from: https://maven.apache.org/download.cgi
Full list of changes can be viewed in JIRA: https://jira.codehaus.org/secure/ReleaseNote.jspa?projectId=10500&amp;amp;version=20819
Bugs:
 MNG-5568 - ComparableVersion&amp;rsquo;s breaks contract for Comparable, in some edgecases the comparisons are not transitive MNG-5592 - Maven Dependency Resolution Locks up MNG-5676 - mvn -U crashes with IBM JDK MNG-5686 - mvn cannot execute /usr/libexec/java_home/bin/java on OS X.</description>
    </item>
    
    <item>
      <title>Apache Maven JXR Plugin Version 2.5 Released</title>
      <link>http://localhost:1313/blog/2014/11/2014-11-05-apache-maven-jxr-version-2-dot-5-released/</link>
      <pubDate>Wed, 05 Nov 2014 22:22:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/11/2014-11-05-apache-maven-jxr-version-2-dot-5-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven JXR, version 2.5.
This module generates browsable HTML pages from Java source code.
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-jxr-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven JXR - Version 2.5
Bug:
 JXR-122 - apache-rat-plugin Configuration for DEPENDENCIES file.  Improvements:
 JXR-111 - Upgrade to Maven 2.2.1 compatiblity JXR-112 - Update version of plexus-utils to 3.</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Component - Maven Archiver Version 2.6 Released</title>
      <link>http://localhost:1313/blog/2014/11/2014-11-01-apache-maven-shared-component-maven-archiver-version-2-dot-6-released/</link>
      <pubDate>Sat, 01 Nov 2014 13:44:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/11/2014-11-01-apache-maven-shared-component-maven-archiver-version-2-dot-6-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Maven Archiver, version 2.6.
The Maven Archiver is mainly used by plugins to handle packaging.
You should specify the version in your project&amp;rsquo;s dependency configuration:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-archiver&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Release Notes - Maven Archiver - Version 2.6
Bugs:
 MSHARED-241 - Use last plexus-archiver version MSHARED-360 - Upgrade plexus-archiver to 2.6.1 (was 2.6) and plexus-utils to 3.0.18 for java7+ symlink support MSHARED-368 - Update plexus-interpolation to 1.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.2.2 Released</title>
      <link>http://localhost:1313/blog/2014/06/2014-06-26-apache-maven-maven-version-3-dot-2-2-released/</link>
      <pubDate>Thu, 26 Jun 2014 19:04:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/06/2014-06-26-apache-maven-maven-version-3-dot-2-2-released/</guid>
      <description>Hi The Apache Maven Team is pleased to announce the release of Apache Maven Release 3.2.2.
The release notes can be found here:
https://maven.apache.org/docs/3.2.2/release-notes.html
The Release Notes
Bugs:
 MNG-4565 - Requiring multiple profile activation conditions to be true does not work MNG-5590 - ${basedir} and ${project.basedir} do not behave the same on file-based profile activation MNG-5591 - Installing workspace reader triggers MNG-5503 MNG-5595 - name field missing in plugin.xml documentation MNG-5596 - plugin descriptor model generated from Modello appears in javadoc MNG-5609 - README.</description>
    </item>
    
    <item>
      <title>Animal Sniffer Version 1.11 Released</title>
      <link>http://localhost:1313/blog/2014/03/2014-03-25-animal-sniffer-version-1-dot-11-released/</link>
      <pubDate>Tue, 25 Mar 2014 19:20:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/03/2014-03-25-animal-sniffer-version-1-dot-11-released/</guid>
      <description>Hi,
The Mojo team is pleased to announce the release of Animal Sniffer version 1.11.
This release permits the use of custom annotations in lieu of @IgnoreJRERequirement
Animal Sniffer provides tools to assist verifying that classes compiled with a newer JDK/API are compatible with an older JDK/API.
The following tools are provided by animal sniffer:
 A command line tool to dump the class file version number  This helps you track down the offending jar file when you see UnsupportedClassVersionError.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.2.1 Released</title>
      <link>http://localhost:1313/blog/2014/02/2014-02-22-release-apache-maven-3-dot-2-1/</link>
      <pubDate>Sat, 22 Feb 2014 12:43:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/02/2014-02-22-release-apache-maven-3-dot-2-1/</guid>
      <description>The Apache Maven team would like to announce the release of Maven 3.2.1.
Maven 3.2.1 is available for download.
Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&amp;rsquo;s build, reporting and documentation from a central place.
Maven 3 aims to ensure backward compatibility with Maven 2, improve usability, increase performance, allow safe embedding, and pave the way to implement many highly demanded features.</description>
    </item>
    
    <item>
      <title>End Of Life Apache Maven 2.x</title>
      <link>http://localhost:1313/blog/2014/02/2014-02-19-end-of-life-apache-maven-2-dot-x/</link>
      <pubDate>Wed, 19 Feb 2014 22:17:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/02/2014-02-19-end-of-life-apache-maven-2-dot-x/</guid>
      <description>The Apache Maven Project Team would like to inform you that the Apache Maven 2.x has reached its end of life and is no longer supported.
Apache Maven 2.x had its last release - version 2.2.1 - in November 2009.
This means:
 security vulnerability reports will not be checked against the 2.x branch the 2.x download pages will be removed. the latest 2.x release will be removed from the mirror system the links to any 2.</description>
    </item>
    
    <item>
      <title>Apache Maven SCM Publish Plugin Version 1.0 Released</title>
      <link>http://localhost:1313/blog/2014/02/2014-02-05-apache-maven-scm-publish-plugin-version-1-dot-0-released/</link>
      <pubDate>Wed, 05 Feb 2014 19:51:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/02/2014-02-05-apache-maven-scm-publish-plugin-version-1-dot-0-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven SCM Publish Plugin, version 1.0
The maven-scm-publish-plugin is a utility plugin to allow publishing Maven website to any supported SCM. The primary goal was to have an utility plugin to allow Apache projects to publish Maven websites via the ASF svnpubsub system. The plugin has been tested with git scm too and by example can push content for github pages.</description>
    </item>
    
    <item>
      <title>Mojo&#39;s License Maven Plugin Version 1.6 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-16-mojos-license-maven-plugin-version-1-dot-6-released/</link>
      <pubDate>Thu, 16 Jan 2014 17:44:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-16-mojos-license-maven-plugin-version-1-dot-6-released/</guid>
      <description>The Mojo team is pleased to announce the release of the License Maven Plugin, version 1.6.
This plugin manages the license of a maven project and its dependencies (update file headers, download dependencies licenses, check thirdparty licenses, &amp;hellip;).
#Description#
This License Plugin has the following goals:
 license:add-third-party  Goal to generate the third-party license file. This file contains a list of the dependencies and their licenses. Each dependency and it&amp;rsquo;s license is displayed on a single line in the format:</description>
    </item>
    
    <item>
      <title>Mojo&#39;s Webstart Maven Plugin Version 1.0-beta-6 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-16-mojos-webstart-maven-plugin-version-1-dot-0-beta-6-released/</link>
      <pubDate>Thu, 16 Jan 2014 17:39:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-16-mojos-webstart-maven-plugin-version-1-dot-0-beta-6-released/</guid>
      <description>The Mojo team is pleased to announce the release of the Webstart Maven Plugin version 1.0-beta-6
The Webstart Maven Plugin generates application bundles that can be deployed via Web Start. The plugin can be used to prepare standalone Web Start applications or Web Start applications bundled in WAR files (with or without Sun´s Download Servlet). It handles the generation of JNLP files and optional version.xml files, using Velocity templates. It also handles the selection and preparation of the dependencies, performing signing, unsigning and Pack200 compression when required.</description>
    </item>
    
    <item>
      <title>Apache Maven SCM Plugin 1.9 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-12-apache-maven-scm-plugin-1-dot-9-released/</link>
      <pubDate>Sun, 12 Jan 2014 16:09:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-12-apache-maven-scm-plugin-1-dot-9-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven SCM Plugin, version 1.9.
The SCM Plugin offers vendor independent access to common scm commands by offering a set of command mappings for the configured scm.
You should specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-scm-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.9&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Maven SCM Plugin - Version 1.9
Fixed Bugs:
 SCM-435 - can not work with local copy SCM-503 - create a native Java GIT provider using JGit SCM-650 - HgChangeLogConsumer generates phantom &amp;lsquo;null&amp;rsquo; changeset at the end SCM-681 - Git blame fails to report line authors on windows with core.</description>
    </item>
    
    <item>
      <title>Apache Maven Jarsigner Plugin Version 1.3 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-03-apache-maven-jarsigner-plugin-1-dot-3-released/</link>
      <pubDate>Fri, 03 Jan 2014 13:15:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-03-apache-maven-jarsigner-plugin-1-dot-3-released/</guid>
      <description>The Maven team is pleased to announce the release of the Maven Jarsigner Plugin, version 1.3.
This plugin signs and verifies the project artifacts using the jarsigner tool. See the plugin´s site for more details:
This plugin is meant to supercede the existing jar:sign and jar:verify goals from the Maven Jar Plugin which will be deprecated in a future release.
To use the updated plugin in your projects, you need to add the following snippet to the plugins or plugin management section of your POM:</description>
    </item>
    
    <item>
      <title>Apache Maven Shared Jarsigner Version 1.3 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-03-apache-maven-shared-jarsigner-1-dot-3-released/</link>
      <pubDate>Fri, 03 Jan 2014 13:08:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-03-apache-maven-shared-jarsigner-1-dot-3-released/</guid>
      <description>The Maven team is pleased to announce the release of the Apache Maven Shared Jarsigner
This component provides some utilities to sign/verify jars/files in your Mojos.
To use the Maven Jarsigner, add the following dependency to your project:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.shared&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-jarsigner&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Release Notes - Maven Shared Components - Version maven-jarsigner-1.3
Fixed Bug:
 MSHARED-314 - Unsigning a jar is not correct  Enjoy,
-The Maven team</description>
    </item>
    
    <item>
      <title>Apache Maven Wagon Version 2.6 Released</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-02-apache-maven-wagon-2-dot-6-released/</link>
      <pubDate>Thu, 02 Jan 2014 19:44:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-02-apache-maven-wagon-2-dot-6-released/</guid>
      <description>The Apache Maven team is pleased to announce the release of the Apache Maven Wagon, Version 2.6
The Wagon component provides communications between Maven and repositories.
Typically, to use a particular version of Wagon, you would add an &amp;lsquo;extension&amp;rsquo; to your POM, such as:
&amp;lt;extensions&amp;gt; &amp;lt;extension&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.wagon&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;wagon-ssh&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6&amp;lt;/version&amp;gt; &amp;lt;/extension&amp;gt; &amp;lt;/extensions&amp;gt; Release Notes - Apache Maven Wagon - Version 2.6
There have been solved 3 issues:
Improvement:
 WAGON-401 - Access Denied due to missing User-Agent WAGON-402 - Upgrade Apache HttpClient based wagon provider to HttpClient 4.</description>
    </item>
    
    <item>
      <title>Version Information Into Your Apps With Maven</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-02-version-information-into-your-appas-with-maven/</link>
      <pubDate>Thu, 02 Jan 2014 19:08:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-02-version-information-into-your-appas-with-maven/</guid>
      <description>It often happens having an application and you want to show a version information in a kind of About Dialog or may be on command line as well (probably you know --version stuff).
So in relationship with Maven the question is: How to get this into your Java code. There are in general four ways to do it:
 Using the pom.properties file which is created by default by Maven.</description>
    </item>
    
    <item>
      <title>FluentAPI - Usage</title>
      <link>http://localhost:1313/blog/2014/01/2014-01-01-fluentapi-usage/</link>
      <pubDate>Wed, 01 Jan 2014 01:23:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014/01/2014-01-01-fluentapi-usage/</guid>
      <description>As a Java developer I always got the impression that my own code can be made better (unfortunately I am not perfect). That brought me to think about how I could improve the code.
So I thought several times about my code and while looking for example into my unit/integrations tests I found the following code snippet:
AccessRules rules = new AccessRules(); AccessRule rule1 = new AccessRule(&amp;#34;/&amp;#34;); rule1.add(UserFactory.createInstance(&amp;#34;*&amp;#34;), AccessLevel.READ); rule1.add(UserFactory.createInstance(&amp;#34;harry&amp;#34;), AccessLevel.</description>
    </item>
    
    <item>
      <title>Appassembler Maven Plugin 1.7 released</title>
      <link>http://localhost:1313/blog/2013/2013-12-20-appassembler-maven-plugin-release-1-dot-7/</link>
      <pubDate>Fri, 20 Dec 2013 23:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-12-20-appassembler-maven-plugin-release-1-dot-7/</guid>
      <description>The Mojo Team is pleased to announce the new release of the Appassembler Maven Plugin 1.7 which contains a number of bug fixes, improvements and a new feature.
The Application Assembler Plugin is a Maven plugin for generating scripts for starting java applications. All dependencies and the artifact of the project itself are placed in a generated Maven repository in a defined assemble directory. All artifacts (dependencies + the artifact from the project) are added to the classpath in the generated bin scripts.</description>
    </item>
    
    <item>
      <title>FindBugs Maven Plugin Version 2.5.3 released</title>
      <link>http://localhost:1313/blog/2013/2013-11-25-findbugs-maven-plugin-version-2-dot-5-3-released/</link>
      <pubDate>Mon, 25 Nov 2013 20:31:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-11-25-findbugs-maven-plugin-version-2-dot-5-3-released/</guid>
      <description>The Mojo team is pleased to announce the release of the FindBugs Maven Plugin version 2.5.3 FindBugs uses static analysis to inspect Java bytecode for occurrences of bug patterns.
To get this update, simply specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;findbugs-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5.3&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Mojo&amp;rsquo;s FindBugs Maven Plugin - Version 2.5.3
The following issues have been solved:
 [MFINDBUGS-174] - Incorrect exclude files used [MFINDBUGS-176] - Update to plexus-resources 1.</description>
    </item>
    
    <item>
      <title>Clirr Maven Plugin Version 2.6.1 Released</title>
      <link>http://localhost:1313/blog/2013/2013-11-25-clirr-maven-plugin-version-2-dot-6-1-released/</link>
      <pubDate>Mon, 25 Nov 2013 20:05:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-11-25-clirr-maven-plugin-version-2-dot-6-1-released/</guid>
      <description>The Mojo team is pleased to announce the release of the Clirr Maven Plugin version 2.6.1
Clirr is an application, which allows you to compare binaries or sources for compatibility. The Clirr Maven Plugin allows you to use Clirr from Maven 2. This version of the plugin uses Clirr 0.6.
To get this update, simply specify the version in your project&amp;rsquo;s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;clirr-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6.1&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; Release Notes - Mojo&amp;rsquo;s Clirr Maven Plugin - Version 2.</description>
    </item>
    
    <item>
      <title>Appassembler Maven Plugin 1.6 released</title>
      <link>http://localhost:1313/blog/2013/2013-11-05-appassembler-maven-plugin-release-1-dot-6/</link>
      <pubDate>Tue, 05 Nov 2013 20:02:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-11-05-appassembler-maven-plugin-release-1-dot-6/</guid>
      <description>The new release of the Appassembler Maven Plugin 1.6 contains a number of bug fixes, improvements and a new feature.
The following bugs are fixed:
 [MAPPASM-188] - Empty CLASSPATH_PREFIX adds current directory to classpath [MAPPASM-204] - Support Solaris x86_64 - Commercial JSW only [MAPPASM-208] - binFolder configuration is not used to generate path to environment setup file. [MAPPASM-211] - Null pointer exception when providing empty &amp;lt;commandLineArgument&amp;gt;.  The following improvements:</description>
    </item>
    
    <item>
      <title>Apache Maven Enforcer Plugin - Extra Rules 1.0-beta-2</title>
      <link>http://localhost:1313/blog/2013/2013-11-05-apache-maven-enforcer-plugin-extra-rules-1-dot-0-beta-2/</link>
      <pubDate>Tue, 05 Nov 2013 19:37:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-11-05-apache-maven-enforcer-plugin-extra-rules-1-dot-0-beta-2/</guid>
      <description>The new release of the Apache Maven Enforcer Plugin - Extra Rules contains the following changes:
Fixed bug:
 [MOJO-1980] - Add assertion message when corrupt classfile is detected in enforceBytecodeVersion  Improvement
 [MOJO-1976] - Artifact exclusion list for enforceBytecodeVersion  Here the link to the change log for this release.</description>
    </item>
    
    <item>
      <title>Apache Maven Release Plugin - Release 2.4.2</title>
      <link>http://localhost:1313/blog/2013/2013-10-28-apache-maven-release-plugin-release-2-dot-4-dot-2/</link>
      <pubDate>Mon, 28 Oct 2013 20:35:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-28-apache-maven-release-plugin-release-2-dot-4-dot-2/</guid>
      <description>The new release of the Apache Maven Release Plugin 2.4.2 contains three bug fixes:
Fixed bugs:
 MRELEASE-766 - release:prepare stores settings.xml in a public directory MRELEASE-832 - When performing a release, username and password parameters are ignored. MRELEASE-846 - m2 release plugin exposes SCM password in release.properties file.  Here the link to the change log for this release.</description>
    </item>
    
    <item>
      <title>SQLJ Maven Plugin - Release 1.2</title>
      <link>http://localhost:1313/blog/2013/2013-10-22-sqlj-maven-plugin-release-1-dot-2/</link>
      <pubDate>Tue, 22 Oct 2013 12:41:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-22-sqlj-maven-plugin-release-1-dot-2/</guid>
      <description>The Mojo Teams has released a new version of the SQLJ Maven Plugin version 1.2.
The prior version of the plugin was release about five years ago. This maintenance release mainly focuses on adding m2e compatibility to the plugin. For those using it, it will bring very nice incremental build support in Eclipse.
To get this update, simply specify the version in your project`s plugin configuration:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;sqlj-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt; &amp;lt;/plugin&amp;gt; The following bugs have been fixed:</description>
    </item>
    
    <item>
      <title>Apache Maven Deploy Plugin - Release 2.8.1</title>
      <link>http://localhost:1313/blog/2013/2013-10-19-maven-deploy-plugin-release-2-dot-8-dot-1/</link>
      <pubDate>Sat, 19 Oct 2013 15:30:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-19-maven-deploy-plugin-release-2-dot-8-dot-1/</guid>
      <description>The new release of the Apache Maven Deploy Plugin 2.8.1 contains two bug fixes:
Fixed bugs:
 MDEPLOY-169 - deployAtEnd broken with parallel builds MDEPLOY-170 - Plugin configuration on module level is ignored when deployAtEnd  Thanks to the Maven Team.</description>
    </item>
    
    <item>
      <title>Apache Maven Install Plugin - Release 2.5.1</title>
      <link>http://localhost:1313/blog/2013/2013-10-19-maven-install-plugin-release-2-dot-5-dot-1/</link>
      <pubDate>Sat, 19 Oct 2013 15:25:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-19-maven-install-plugin-release-2-dot-5-dot-1/</guid>
      <description>The new release of the Apache Maven Install Plugin 2.5.1 contains two bug fixes:
Fixed bugs:
 MINSTALL-98 - installAtEnd broken with parallel builds MINSTALL-99 - InstallAtEnd should respect plugin-configuration per project  Thanks to the Maven Team.</description>
    </item>
    
    <item>
      <title>Cargo Maven Plugin 1.4.5 Released</title>
      <link>http://localhost:1313/blog/2013/2013-10-18-cargo-maven-plugin-1-dot-4-dot-5/</link>
      <pubDate>Fri, 18 Oct 2013 21:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-18-cargo-maven-plugin-1-dot-4-dot-5/</guid>
      <description>After a really short while a new bug fix release 1.4.5 for Cargo has been released. The CARGO Team has fixed the following bugs: Bug
 CARGO-1222 - JBoss7xInstalledLocalContainer unable to stop container running on hostname other than localhost CARGO-1224 - Not all JVM options are supported for Glassfish CARGO-1228 - Issue with the display-name of web.xml for WARs inside EARs CARGO-1230 - NPE in when adding classpath entry for ResinRun  and the following improvements:</description>
    </item>
    
    <item>
      <title>Apache Maven 3.1.1 Released</title>
      <link>http://localhost:1313/blog/2013/2013-10-05-maven-3-dot-1-1-released/</link>
      <pubDate>Sat, 05 Oct 2013 14:22:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-10-05-maven-3-dot-1-1-released/</guid>
      <description>After a while a new Maven Release 3.1.1 is now available. The Maven Team has fixed the following bugs:
 MNG-5459 - failure to resolve pom artifact from snapshotVersion in maven-metadata.xml MNG-5495 - API incompatibility causes Swagger Maven Plugin (and others) to fail under Maven 3.1.0 MNG-5499 - maven-aether-provider leaks Sisu Plexus and ObjectWeb classes onto the classpath when they are not required MNG-5500 - help for &amp;ndash;legacy-local-repository option explains _maven.</description>
    </item>
    
    <item>
      <title>Build Smells - Maven Assembly Plugin</title>
      <link>http://localhost:1313/blog/2013/2013-09-28-build-smells-maven-assembly-plugin/</link>
      <pubDate>Sat, 28 Sep 2013 14:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-09-28-build-smells-maven-assembly-plugin/</guid>
      <description>If you are a software developer (for example in Java) you might have heard about code smells which indicate not really bugs, but usually are a kind of indicator for problems in the future. It´s usually a good practice to fix such code smells.
But sometimes if I take a deeper look into a Maven build I can observe things like Build Smells which could produce problems in future but not need to.</description>
    </item>
    
    <item>
      <title>Apache Maven Deploy Plugin - Release 2.8</title>
      <link>http://localhost:1313/blog/2013/2013-09-28-apache-maven-deploy-plugin-release-2-dot-8/</link>
      <pubDate>Sat, 28 Sep 2013 12:25:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-09-28-apache-maven-deploy-plugin-release-2-dot-8/</guid>
      <description>The new release of the Apache Maven Deploy Plugin 2.8 is available.
The new release of the Maven Deploy Plugin contains two bug fixes, an improvement and an very important new feature MDEPLOY-157. This will address the problem of deploying artifacts within a multi-module build where not all artifacts have successfuly installed.
Bug
 MDEPLOY-68 - altDeploymentRepository allows dangerous deploy processes MDEPLOY-145 - Documentation does not list layouts  Improvement</description>
    </item>
    
    <item>
      <title>Appassembler Maven Plugin 1.5 released</title>
      <link>http://localhost:1313/blog/2013/2013-09-14-appassembler-maven-plugin-release-1-dot-5/</link>
      <pubDate>Sat, 14 Sep 2013 20:02:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-09-14-appassembler-maven-plugin-release-1-dot-5/</guid>
      <description>The new release of the Appassembler Maven Plugin 1.5 contains a number of bug fixes, improvements and a new feature.
The following bug fixes:
 [MAPPASM-96] which solved a problem with deployment failures in relationship with maven-deploy-plugin. [MAPPASM-152] which solved using repositoryName in generate-daemons to give a separate location for the repository (JSW) [MAPPASM-190] wrong JAVA_HOME on moutian lion (Mac OS) [MAPPASM-194] licenseHeaderFile ignored when generating booter daemons  The following improvements:</description>
    </item>
    
    <item>
      <title>Apache Maven 3.1.0 released</title>
      <link>http://localhost:1313/blog/2013/2013-07-15-maven-release-3-1-0-released/</link>
      <pubDate>Mon, 15 Jul 2013 19:45:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-07-15-maven-release-3-1-0-released/</guid>
      <description>After a longer time now it&amp;rsquo;s there. The new Maven 3.1 release. The release notes give more detailed information about compatibility. Now the official support of JSR 330 which is the replacement for the older plexus. Also new is the official support for SLF4j.</description>
    </item>
    
    <item>
      <title>Apache Maven 3.0.5 Released</title>
      <link>http://localhost:1313/blog/2013/2013-02-23-maven-3-0-5-released/</link>
      <pubDate>Sat, 23 Feb 2013 18:40:14 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2013/2013-02-23-maven-3-0-5-released/</guid>
      <description>Nach dem nun einige Zeit vergangen ist, gibt es nun eine neue Release von Maven. Der ChangeLog ist in diesem Falle recht Übersichtlich.</description>
    </item>
    
    <item>
      <title>Maven: Configuration For Multipe Environments - II</title>
      <link>http://localhost:1313/blog/2011/2011-08-11-maven-configuration-for-multipe-environments-ii/</link>
      <pubDate>Thu, 11 Aug 2011 09:41:32 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2011/2011-08-11-maven-configuration-for-multipe-environments-ii/</guid>
      <description>Based on a comment on my previous article i would like to show how to add dependencies to the generated artifacts depending on the environment.
The most important problem is: How to get the different artifacts? If you have artifacts which are stored in a Maven Repository like Maven Central it is easy to get them. Just use the Maven Dependency Plugin to get the artifacts. This means you have to add the following to your pom file:</description>
    </item>
    
    <item>
      <title>Maven: Configuration For Multipe Environments</title>
      <link>http://localhost:1313/blog/2011/2011-07-29-maven-configuration-for-multipe-environments/</link>
      <pubDate>Fri, 29 Jul 2011 09:20:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2011/2011-07-29-maven-configuration-for-multipe-environments/</guid>
      <description>I have often heard that it is not possible to create a number of artifacts out of a single Maven module with different configurations. An example from the wild is to have a web-app (or whatever app) which should be running in development, test, q&amp;amp;a and production environment. So you need different configurations for the different environments for example the database connection or whatever. At first glance that seems to be a contradiction cause Maven&amp;rsquo;s paradigm is &amp;ldquo;One Module One Artifact&amp;rdquo;?</description>
    </item>
    
  </channel>
</rss>